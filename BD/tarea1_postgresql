-- TRIGGER para revisar si el revisor es autor
CREATE OR REPLACE FUNCTION verificar_revisor_no_autor()
RETURNS TRIGGER AS $$
BEGIN
    IF EXISTS (                                     --> Revisa si el id del revisor esta en la propiedad del articulo
        SELECT 1 FROM propiedad
        WHERE id_articulo = NEW.id_articulo
        AND id_autor = NEW.id_revisor
    ) THEN
        RAISE EXCEPTION 'El revisor no puede ser autor del articulo';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- TRIGGER para la columna calculada articulo.aprobado
CREATE OR REPLACE FUNCTION calcular_aprobado()
RETURNS TRIGGER AS $$
DECLARE
    total_revisiones INTEGER;
    revisiones_aprobadas INTEGER;
    revisiones_rechazadas INTEGER;
BEGIN
    -- Numero total de revisiones
    SELECT COUNT(*) INTO total_revisiones
    FROM revision
    WHERE id_articulo = NEW.id_articulo;

    -- Numero de revisiones aprobadas
    SELECT COUNT(*) INTO revisiones_aprobadas
    FROM revision
    WHERE id_articulo = NEW.id_articulo AND estado = TRUE;

    -- Numero de revisiones rechazadas
    SELECT COUNT(*) INTO revisiones_rechazadas
    FROM revision
    WHERE id_articulo = NEW.id_articulo AND estado = FALSE;

    IF total_revisiones = 3 THEN                                                        --> Si tiene 3 revisiones, se evalua el estado
        IF revisiones_aprobadas = total_revisiones THEN                                 --> Si todas las revisiones son TRUE, se deja TRUE(aprobado)
            UPDATE articulo SET aprobado = TRUE WHERE id_articulo = NEW.id_articulo;
        ELSIF revisiones_rechazadas > 0 THEN                                            --> Si alguna revision es FALSE, se deja FALSE(rechazado)
            UPDATE articulo SET aprobado = FALSE WHERE id_articulo = NEW.id_articulo;
        ELSE                                                                            --> Si alguna revision es NULL, se deja en NULL(pendiente)
            UPDATE articulo SET aprobado = NULL WHERE id_articulo = NEW.id_articulo;
        END IF;
    ELSE
        UPDATE articulo SET aprobado = NULL WHERE id_articulo = NEW.id_articulo;        --> Si no tiene 3 revisiones, se deja en NULL(pendiente)
    END IF;

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_verificar_revisor_no_autor
BEFORE INSERT OR UPDATE ON revision
FOR EACH ROW
EXECUTE FUNCTION verificar_revisor_no_autor();

CREATE TRIGGER trigger_calcular_aprobado
AFTER INSERT OR UPDATE ON revision
FOR EACH ROW
EXECUTE FUNCTION calcular_aprobado();


-- CAMBIAR A MYSQL